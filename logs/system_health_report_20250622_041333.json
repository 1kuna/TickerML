{
  "timestamp": "2025-06-22T04:12:18.982505",
  "tests": {
    "total": 15,
    "passed": 8,
    "failed": 7,
    "success_rate": 0.5333333333333333,
    "results": {
      "test_newsapi": {
        "status": "passed",
        "output": "\ud83d\udd0d Testing NewsAPI connection...\nAPI Key: 57307964fd...\n\n\ud83d\udcf0 Test 1: Searching for 'Bitcoin' in last 24 hours...\nStatus Code: 200\nTotal Results: 23\nArticles Returned: 5\n\n\ud83d\udd25 Sample Articles:\n  1. Top Bitcoin Stocks To Add to Your Watchlist \u2013 June 18th\n     Source: ETF Daily News\n     Published: 2025-06-21T08:09:05Z\n  2. Top Water Stocks To Watch Today \u2013 June 19th\n     Source: ETF Daily News\n     Published: 2025-06-21T08:08:54Z\n  3. Reviewing Onto Innovation (NYSE:ONTO) & BOTS (OTCMKTS:BTZI)\n     Source: ETF Daily News\n     Published: 2025-06-21T08:01:19Z\n\n\ud83d\udd27 Test 2: Checking API status...\nSources API Status: 200\nAvailable sources: 127\n\u2705 API key is working!\n",
        "error": ""
      },
      "test_new_components": {
        "status": "failed",
        "output": "================================================================================\nTickerML New Components Test Suite\n================================================================================\n\n==================== TestTradeStream ====================\n\n==================== TestEventSynchronizer ====================\n\n==================== TestDataValidator ====================\n\n==================== TestFundingMonitor ====================\n\n==================== TestPaperTrader ====================\n\n==================== TestIntegration ====================\n\n================================================================================\nTEST SUMMARY\n================================================================================\nTotal Tests: 20\nPassed: 16\nFailed: 4\nSuccess Rate: 80.0%\n\u26a0\ufe0f  4 tests failed. Please review the failures above.\n",
        "error": "test_database_initialization (__main__.TestTradeStream)\nTest database initialization. ... 2025-06-22 04:12:20,568 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,569 - raspberry_pi.trade_stream - INFO - Database initialized successfully\nok\ntest_get_trade_statistics (__main__.TestTradeStream)\nTest trade statistics calculation. ... 2025-06-22 04:12:20,573 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,574 - raspberry_pi.trade_stream - INFO - Database initialized successfully\nok\ntest_process_trade_message (__main__.TestTradeStream)\nTest trade message processing. ... 2025-06-22 04:12:20,578 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,579 - raspberry_pi.trade_stream - INFO - Database initialized successfully\nok\n\n----------------------------------------------------------------------\nRan 3 tests in 0.020s\n\nOK\ntest_event_ordering (__main__.TestEventSynchronizer)\nTest event ordering functionality. ... 2025-06-22 04:12:20,584 - raspberry_pi.event_synchronizer - INFO - Registered callback for trade events\nok\ntest_synchronization_stats (__main__.TestEventSynchronizer)\nTest synchronization statistics. ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.010s\n\nOK\ntest_data_quality_metrics (__main__.TestDataValidator)\nTest data quality metrics calculation. ... ok\ntest_invalid_ohlc_data (__main__.TestDataValidator)\nTest validation with invalid OHLC data. ... ok\ntest_ohlcv_validation (__main__.TestDataValidator)\nTest OHLCV data validation. ... ok\n\n----------------------------------------------------------------------\nRan 3 tests in 0.026s\n\nOK\ntest_daily_rate_calculation (__main__.TestFundingMonitor)\nTest daily funding rate calculation. ... 2025-06-22 04:12:20,619 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,621 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\nok\ntest_database_initialization (__main__.TestFundingMonitor)\nTest funding monitor database initialization. ... 2025-06-22 04:12:20,625 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,626 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\nok\ntest_funding_cost_calculation (__main__.TestFundingMonitor)\nTest funding cost calculation. ... 2025-06-22 04:12:20,630 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,632 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\nok\ntest_funding_level_assessment (__main__.TestFundingMonitor)\nTest funding level assessment. ... 2025-06-22 04:12:20,637 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,638 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\nok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.023s\n\nOK\ntest_initial_portfolio_state (__main__.TestPaperTrader)\nTest initial portfolio state. ... 2025-06-22 04:12:20,643 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,644 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\nok\ntest_place_buy_order (__main__.TestPaperTrader)\nTest placing a buy order. ... 2025-06-22 04:12:20,649 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,650 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,651 - raspberry_pi.risk_manager - ERROR - Error calculating portfolio heat: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,651 - raspberry_pi.risk_manager - ERROR - Error assessing concentration risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,652 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,652 - raspberry_pi.risk_manager - WARNING - Insufficient data for correlation analysis\n2025-06-22 04:12:20,652 - raspberry_pi.risk_manager - ERROR - Error calculating correlation risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,652 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,652 - raspberry_pi.risk_manager - ERROR - Error assessing portfolio risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,652 - raspberry_pi.paper_trader - WARNING - Order rejected by risk management: Exceeds single position limit (25.0%)\n2025-06-22 04:12:20,653 - raspberry_pi.paper_trader - INFO - Max allowed position size: $2500.00\nFAIL\ntest_place_sell_order (__main__.TestPaperTrader)\nTest placing a sell order. ... 2025-06-22 04:12:20,657 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,658 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - ERROR - Error calculating portfolio heat: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - ERROR - Error assessing concentration risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - WARNING - Insufficient data for correlation analysis\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - ERROR - Error calculating correlation risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,659 - raspberry_pi.risk_manager - ERROR - Error assessing portfolio risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,659 - raspberry_pi.paper_trader - WARNING - Order rejected by risk management: Exceeds single position limit (25.0%)\n2025-06-22 04:12:20,660 - raspberry_pi.paper_trader - INFO - Max allowed position size: $2500.00\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - ERROR - Error calculating portfolio heat: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - ERROR - Error assessing concentration risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - WARNING - Insufficient data for correlation analysis\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - ERROR - Error calculating correlation risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - ERROR - Error assessing portfolio risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.risk_manager - ERROR - Error checking position limits: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.paper_trader - WARNING - Order rejected by risk management: Error in risk check: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,660 - raspberry_pi.paper_trader - INFO - Max allowed position size: $0.00\nERROR\ntest_portfolio_summary (__main__.TestPaperTrader)\nTest portfolio summary generation. ... 2025-06-22 04:12:20,665 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,666 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - ERROR - Error calculating portfolio heat: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - ERROR - Error assessing concentration risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - WARNING - Insufficient data for correlation analysis\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - ERROR - Error calculating correlation risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - ERROR - Error assessing portfolio risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,667 - raspberry_pi.risk_manager - ERROR - Error checking position limits: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,668 - raspberry_pi.paper_trader - WARNING - Order rejected by risk management: Error in risk check: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,668 - raspberry_pi.paper_trader - INFO - Max allowed position size: $0.00\nFAIL\ntest_portfolio_value_calculation (__main__.TestPaperTrader)\nTest portfolio value calculation. ... 2025-06-22 04:12:20,672 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,673 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,674 - raspberry_pi.risk_manager - ERROR - Error calculating portfolio heat: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,674 - raspberry_pi.risk_manager - ERROR - Error assessing concentration risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,674 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,674 - raspberry_pi.risk_manager - WARNING - Insufficient data for correlation analysis\n2025-06-22 04:12:20,674 - raspberry_pi.risk_manager - ERROR - Error calculating correlation risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,675 - raspberry_pi.risk_manager - WARNING - No price data found for correlation analysis\n2025-06-22 04:12:20,675 - raspberry_pi.risk_manager - ERROR - Error assessing portfolio risk: 'float' object has no attribute 'get'\n2025-06-22 04:12:20,675 - raspberry_pi.paper_trader - WARNING - Order rejected by risk management: Exceeds single position limit (25.0%)\n2025-06-22 04:12:20,675 - raspberry_pi.paper_trader - INFO - Max allowed position size: $2500.00\nFAIL\ntest_position_size_calculation (__main__.TestPaperTrader)\nTest position size calculation. ... 2025-06-22 04:12:20,679 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,680 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\nok\n\n======================================================================\nERROR: test_place_sell_order (__main__.TestPaperTrader)\nTest placing a sell order.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_new_components.py\", line 414, in test_place_sell_order\n    position = self.engine.positions['BTCUSDT']\nKeyError: 'BTCUSDT'\n\n======================================================================\nFAIL: test_place_buy_order (__main__.TestPaperTrader)\nTest placing a buy order.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_new_components.py\", line 395, in test_place_buy_order\n    self.assertIn(order_id, self.engine.orders)\nAssertionError: '' not found in {}\n\n======================================================================\nFAIL: test_portfolio_summary (__main__.TestPaperTrader)\nTest portfolio summary generation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_new_components.py\", line 450, in test_portfolio_summary\n    self.assertEqual(summary['position_count'], 1)\nAssertionError: 0 != 1\n\n======================================================================\nFAIL: test_portfolio_value_calculation (__main__.TestPaperTrader)\nTest portfolio value calculation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_new_components.py\", line 427, in test_portfolio_value_calculation\n    self.assertLess(portfolio_value, 10000.0)\nAssertionError: 10000.0 not less than 10000.0\n\n----------------------------------------------------------------------\nRan 6 tests in 0.042s\n\nFAILED (failures=3, errors=1)\ntest_data_flow_integration (__main__.TestIntegration)\nTest data flow between components. ... 2025-06-22 04:12:20,685 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,685 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,697 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,698 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,702 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,703 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,704 - raspberry_pi.trade_stream - INFO - Flushed 1 trades to database\nok\ntest_database_compatibility (__main__.TestIntegration)\nTest that all components can work with the same database. ... 2025-06-22 04:12:20,709 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,709 - raspberry_pi.trade_stream - INFO - Database initialized successfully\n2025-06-22 04:12:20,721 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,722 - raspberry_pi.funding_monitor - INFO - Funding rates database initialized successfully\n2025-06-22 04:12:20,727 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\n2025-06-22 04:12:20,728 - raspberry_pi.paper_trader - INFO - Paper trading database initialized successfully\nok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.047s\n\nOK\n",
        "return_code": 1
      },
      "test_features": {
        "status": "passed",
        "output": "",
        "error": "2025-06-22 04:12:21,397 - ERROR - An unexpected error occurred while trying to load original function: name '__file__' is not defined\ns\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK (skipped=1)\n"
      },
      "test_news_harvest": {
        "status": "passed",
        "output": "",
        "error": "2025-06-22 04:12:21,465 - INFO - \ud83d\ude80 Starting News Harvest Tests\n2025-06-22 04:12:21,465 - INFO - ==================================================\n2025-06-22 04:12:21,465 - INFO - \ud83d\udd0d Test 1: Testing news database initialization...\n2025-06-22 04:12:21,524 - INFO - News database tables initialized at /Users/zach/Documents/Git/TickerML/data/db/crypto_news.db\n2025-06-22 04:12:21,524 - INFO - \u2705 News database tables created successfully\n2025-06-22 04:12:21,524 - INFO - ------------------------------\n2025-06-22 04:12:21,524 - INFO - \ud83d\udd0d Test 2: Testing sentiment analysis...\n2025-06-22 04:12:21,524 - ERROR - \u274c Sentiment analysis test failed: cannot import name 'analyze_sentiment_basic' from 'raspberry_pi.news_harvest' (/Users/zach/Documents/Git/TickerML/raspberry_pi/news_harvest.py)\n2025-06-22 04:12:21,524 - INFO - ------------------------------\n2025-06-22 04:12:21,524 - INFO - \ud83d\udd0d Test 3: Testing news fetching configuration...\n2025-06-22 04:12:21,524 - INFO - NewsAPI Key configured: Yes\n2025-06-22 04:12:21,524 - INFO - Symbols configured: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:21,524 - INFO - Testing news fetch for BTCUSD...\n2025-06-22 04:12:21,762 - INFO - Fetched 0 articles for BTCUSD\n2025-06-22 04:12:21,763 - INFO - Fetched 0 articles\n2025-06-22 04:12:21,763 - INFO - \u2705 News fetching configuration looks good\n2025-06-22 04:12:21,763 - INFO - ------------------------------\n2025-06-22 04:12:21,763 - INFO - \ud83d\udd0d Test 4: Testing news storage...\n2025-06-22 04:12:21,765 - ERROR - \u274c Failed to store article\n2025-06-22 04:12:21,765 - INFO - ------------------------------\n2025-06-22 04:12:21,765 - INFO - \ud83d\udd0d Test 5: Testing full harvest process...\n2025-06-22 04:12:21,765 - INFO - Testing full harvest for BTCUSD...\n2025-06-22 04:12:21,765 - INFO - Harvesting news for BTCUSD\n2025-06-22 04:12:21,939 - INFO - Fetched 22 articles for BTCUSD\n2025-06-22 04:12:22,946 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,061 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,183 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,313 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,440 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,583 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,722 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:23,879 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,026 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,159 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,292 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,441 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,568 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,696 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,827 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:24,959 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,087 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,227 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,354 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,489 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,633 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,778 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:25,784 - INFO - No articles with sentiment found for BTCUSD in the last 24 hours.\n2025-06-22 04:12:25,784 - INFO - Stored 22 new articles for BTCUSD\n2025-06-22 04:12:25,785 - INFO - Articles in database for BTCUSD: 56\n2025-06-22 04:12:25,785 - INFO - Sentiment records for BTCUSD: 0\n2025-06-22 04:12:25,785 - INFO - \u2705 Full harvest process completed\n2025-06-22 04:12:25,785 - INFO - ------------------------------\n2025-06-22 04:12:25,785 - INFO - ==================================================\n2025-06-22 04:12:25,785 - INFO - \ud83d\udcca Test Results: 3 passed, 2 failed\n2025-06-22 04:12:25,786 - WARNING - \u26a0\ufe0f  2 tests failed\n2025-06-22 04:12:25,786 - INFO - \n\ud83d\udccb Next Steps:\n2025-06-22 04:12:25,786 - INFO - 1. Set up NewsAPI key in config/config.yaml for full functionality\n2025-06-22 04:12:25,786 - INFO - 2. Add to crontab for automated harvesting:\n2025-06-22 04:12:25,786 - INFO -    */15 * * * * cd /Users/zach/Documents/Git/TickerML && python raspberry_pi/news_harvest.py >> logs/news_harvest.log 2>&1\n2025-06-22 04:12:25,786 - INFO - 3. Monitor logs: tail -f logs/news_harvest.log\n"
      },
      "test_orderbook_collector": {
        "status": "failed",
        "output": "",
        "error": "2025-06-22 04:12:25,956 - INFO - Starting order book collector test suite\ntest_data_storage (__main__.TestOrderBookCollector)\nTest order book data storage ... 2025-06-22 04:12:25,973 - INFO - Order book database tables initialized\n2025-06-22 04:12:25,975 - INFO - Order book database tables initialized\nERROR\ntest_database_initialization (__main__.TestOrderBookCollector)\nTest database table creation ... 2025-06-22 04:12:25,980 - INFO - Order book database tables initialized\n2025-06-22 04:12:25,982 - INFO - Order book database tables initialized\nFAIL\ntest_depth_calculation (__main__.TestOrderBookCollector)\nTest order book depth calculation ... 2025-06-22 04:12:25,987 - INFO - Order book database tables initialized\n2025-06-22 04:12:25,988 - INFO - Order book database tables initialized\nok\ntest_error_handling (__main__.TestOrderBookCollector)\nTest error handling in various scenarios ... 2025-06-22 04:12:25,993 - INFO - Order book database tables initialized\n2025-06-22 04:12:25,995 - INFO - Order book database tables initialized\n2025-06-22 04:12:25,995 - WARNING - Empty order book for BTCUSD\nok\ntest_imbalance_calculation (__main__.TestOrderBookCollector)\nTest order book imbalance calculation ... 2025-06-22 04:12:25,999 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,001 - INFO - Order book database tables initialized\nok\ntest_microprice_calculation (__main__.TestOrderBookCollector)\nTest microprice calculation ... 2025-06-22 04:12:26,005 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,007 - INFO - Order book database tables initialized\nFAIL\ntest_order_book_level_creation (__main__.TestOrderBookCollector)\nTest OrderBookLevel data structure ... 2025-06-22 04:12:26,012 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,013 - INFO - Order book database tables initialized\nERROR\ntest_order_book_snapshot_creation (__main__.TestOrderBookCollector)\nTest OrderBookSnapshot creation with microstructure features ... 2025-06-22 04:12:26,018 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,019 - INFO - Order book database tables initialized\nERROR\ntest_queue_position_estimation (__main__.TestOrderBookCollector)\nTest queue position estimation for execution simulation ... 2025-06-22 04:12:26,024 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,025 - INFO - Order book database tables initialized\nERROR\ntest_spread_calculation (__main__.TestOrderBookCollector)\nTest spread calculation in basis points ... 2025-06-22 04:12:26,030 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,032 - INFO - Order book database tables initialized\nFAIL\ntest_subscription_message_format (__main__.TestOrderBookCollector)\nTest WebSocket subscription message format ... 2025-06-22 04:12:26,041 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,043 - INFO - Order book database tables initialized\nFAIL\ntest_websocket_connection (__main__.TestOrderBookCollector)\nTest WebSocket connection setup ... 2025-06-22 04:12:26,048 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,049 - INFO - Order book database tables initialized\nERROR\ntest_data_flow_integration (__main__.TestOrderBookIntegration)\nTest complete data flow from WebSocket to database ... 2025-06-22 04:12:26,057 - INFO - Order book database tables initialized\n2025-06-22 04:12:26,058 - INFO - Order book database tables initialized\nERROR\n\n======================================================================\nERROR: test_data_storage (__main__.TestOrderBookCollector)\nTest order book data storage\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 218, in test_data_storage\n    snapshot = OrderBookSnapshot(\nTypeError: OrderBookSnapshot.__init__() got an unexpected keyword argument 'timestamp'\n\n======================================================================\nERROR: test_order_book_level_creation (__main__.TestOrderBookCollector)\nTest OrderBookLevel data structure\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 95, in test_order_book_level_creation\n    self.assertEqual(level.timestamp, timestamp)\nAttributeError: 'OrderBookLevel' object has no attribute 'timestamp'\n\n======================================================================\nERROR: test_order_book_snapshot_creation (__main__.TestOrderBookCollector)\nTest OrderBookSnapshot creation with microstructure features\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 114, in test_order_book_snapshot_creation\n    snapshot = OrderBookSnapshot(\nTypeError: OrderBookSnapshot.__init__() got an unexpected keyword argument 'timestamp'\n\n======================================================================\nERROR: test_queue_position_estimation (__main__.TestOrderBookCollector)\nTest queue position estimation for execution simulation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 193, in test_queue_position_estimation\n    cursor.execute('''\nsqlite3.OperationalError: table order_books has no column named microprice\n\n======================================================================\nERROR: test_websocket_connection (__main__.TestOrderBookCollector)\nTest WebSocket connection setup\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/miniconda3/lib/python3.10/unittest/mock.py\", line 1376, in patched\n    with self.decoration_helper(patched,\n  File \"/Users/zach/miniconda3/lib/python3.10/contextlib.py\", line 135, in __enter__\n    return next(self.gen)\n  File \"/Users/zach/miniconda3/lib/python3.10/unittest/mock.py\", line 1358, in decoration_helper\n    arg = exit_stack.enter_context(patching)\n  File \"/Users/zach/miniconda3/lib/python3.10/contextlib.py\", line 492, in enter_context\n    result = _cm_type.__enter__(cm)\n  File \"/Users/zach/miniconda3/lib/python3.10/unittest/mock.py\", line 1431, in __enter__\n    self.target = self.getter()\n  File \"/Users/zach/miniconda3/lib/python3.10/unittest/mock.py\", line 1618, in <lambda>\n    getter = lambda: _importer(target)\n  File \"/Users/zach/miniconda3/lib/python3.10/unittest/mock.py\", line 1257, in _importer\n    thing = __import__(import_path)\nModuleNotFoundError: No module named 'websocket'\n\n======================================================================\nERROR: test_data_flow_integration (__main__.TestOrderBookIntegration)\nTest complete data flow from WebSocket to database\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 402, in test_data_flow_integration\n    success = collector._store_order_book_snapshot(snapshot)\nAttributeError: 'BinanceOrderBookCollector' object has no attribute '_store_order_book_snapshot'\n\n======================================================================\nFAIL: test_database_initialization (__main__.TestOrderBookCollector)\nTest database table creation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 84, in test_database_initialization\n    self.assertIn(col, columns, f\"Column {col} should exist in order_books table\")\nAssertionError: 'microprice' not found in ['id', 'timestamp', 'exchange', 'symbol', 'bids', 'asks', 'mid_price', 'spread', 'spread_bps', 'imbalance', 'created_at'] : Column microprice should exist in order_books table\n\n======================================================================\nFAIL: test_microprice_calculation (__main__.TestOrderBookCollector)\nTest microprice calculation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 168, in test_microprice_calculation\n    self.assertLess(microprice, expected_mid, \"More bid quantity should pull microprice toward bid\")\nAssertionError: 100.13333333333333 not less than 100.1 : More bid quantity should pull microprice toward bid\n\n======================================================================\nFAIL: test_spread_calculation (__main__.TestOrderBookCollector)\nTest spread calculation in basis points\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 253, in test_spread_calculation\n    self.assertAlmostEqual(spread_bps, 99.95, places=1,\nAssertionError: 9.995002498750056 != 99.95 within 1 places (89.95499750124995 difference) : Spread calculation should be accurate\n\n======================================================================\nFAIL: test_subscription_message_format (__main__.TestOrderBookCollector)\nTest WebSocket subscription message format\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_orderbook_collector.py\", line 333, in test_subscription_message_format\n    self.assertIn(symbol_stream, streams)\nAssertionError: 'btcusd@depth20@100ms' not found in ['btcusd@depth@100ms', 'ethusd@depth@100ms']\n\n----------------------------------------------------------------------\nRan 13 tests in 0.102s\n\nFAILED (failures=4, errors=6)\n2025-06-22 04:12:26,059 - INFO - Order Book Collector Tests Complete:\n2025-06-22 04:12:26,060 - INFO -   Tests Run: 13\n2025-06-22 04:12:26,060 - INFO -   Failures: 4\n2025-06-22 04:12:26,060 - INFO -   Errors: 6\n2025-06-22 04:12:26,060 - INFO -   Success Rate: 23.1%\n",
        "return_code": 1
      },
      "test_data_collection": {
        "status": "failed",
        "output": "\n\ud83d\udd04 Run continuous collection test? (y/N): ",
        "error": "2025-06-22 04:12:26,426 - INFO - Loaded 'binance_api_base' from config: https://api.binance.us/api/v3\n2025-06-22 04:12:26,426 - INFO - Loaded 'db_path' from config: data/db/crypto_data.db\n2025-06-22 04:12:26,426 - INFO - Loaded 'dumps_path' from config: data/dumps\n2025-06-22 04:12:26,426 - INFO - Loaded 'symbols' from config: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:26,426 - INFO - \ud83d\ude80 Starting TickerML Data Collection Pipeline Tests\n2025-06-22 04:12:26,426 - INFO - ============================================================\n2025-06-22 04:12:26,426 - INFO - \n2025-06-22 04:12:26,426 - INFO - \ud83d\udd0d Test 1: Testing API connections...\n2025-06-22 04:12:26,571 - INFO - \u2705 Binance.US API ping successful\n2025-06-22 04:12:26,685 - INFO - \u2705 Binance.US klines data received: OHLCV = ['102500.00000000', '102500.00000000', '102500.00000000', '102500.00000000', '0.00000000']\n2025-06-22 04:12:26,817 - INFO - \u2705 CoinGecko API working: BTC=$102451, ETH=$2270.97\n2025-06-22 04:12:26,817 - INFO - \u2705 Primary API (Binance.US) is working\n2025-06-22 04:12:26,819 - INFO - \n2025-06-22 04:12:26,820 - INFO - \ud83d\udd0d Test 2: Testing database setup...\n2025-06-22 04:12:26,844 - WARNING - database.ohlcv_path not found in config. Using default.\n2025-06-22 04:12:26,844 - INFO - Loaded data.binance_api_base from config: https://api.binance.us/api/v3\n2025-06-22 04:12:26,845 - INFO - Loaded data.symbols from config: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:26,846 - INFO - Enhanced database schema initialized for high-frequency data collection\n2025-06-22 04:12:26,846 - INFO - Database initialized at /Users/zach/Documents/Git/TickerML/data/db/crypto_ohlcv.db\n2025-06-22 04:12:26,846 - INFO - \u2705 Database initialized successfully\n2025-06-22 04:12:26,847 - INFO - Stored data for TESTUSD at 2025-06-22 04:12:26.846000\n2025-06-22 04:12:26,848 - INFO - \u2705 Test data stored successfully\n2025-06-22 04:12:26,849 - INFO - \u2705 Data verification successful: 1 records found\n2025-06-22 04:12:26,849 - INFO - \n2025-06-22 04:12:26,849 - INFO - \ud83d\udd0d Test 3: Testing data harvesting...\n2025-06-22 04:12:26,849 - INFO -    Testing BTCUSD...\n2025-06-22 04:12:26,934 - INFO - \u2705 BTCUSD data from Binance.US: $102500.00\n2025-06-22 04:12:26,935 - INFO -    \u2705 BTCUSD data fetched: Close=$102500.00\n2025-06-22 04:12:26,936 - INFO - Stored data for BTCUSD at 2025-06-22 04:12:00\n2025-06-22 04:12:26,937 - INFO -    \u2705 BTCUSD data stored\n2025-06-22 04:12:26,937 - INFO -    Testing ETHUSD...\n2025-06-22 04:12:27,059 - INFO - \u2705 ETHUSD data from Binance.US: $2270.56\n2025-06-22 04:12:27,059 - INFO -    \u2705 ETHUSD data fetched: Close=$2270.56\n2025-06-22 04:12:27,062 - INFO - Stored data for ETHUSD at 2025-06-22 04:12:00\n2025-06-22 04:12:27,064 - INFO -    \u2705 ETHUSD data stored\n2025-06-22 04:12:27,064 - INFO - \u2705 All symbols harvested successfully\n2025-06-22 04:12:27,064 - INFO - \n2025-06-22 04:12:27,064 - INFO - \ud83d\udd0d Test 4: Testing data export...\n2025-06-22 04:12:27,085 - WARNING - database.ohlcv_path not found in config. Using default: /Users/zach/Documents/Git/TickerML/data/db/crypto_ohlcv.db\n2025-06-22 04:12:27,085 - INFO - Loaded paths.data_dumps from config: data/dumps\n2025-06-22 04:12:27,085 - INFO - Loaded data.symbols from config: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:27,086 - INFO - Exporting data from 2025-06-21 04:12:27.086124 to 2025-06-22 04:12:27.086124\n2025-06-22 04:12:27,097 - INFO - Exported 1 records for BTCUSD to BTCUSD_2025-06-22.csv\n2025-06-22 04:12:27,099 - INFO - Exported 1 records for ETHUSD to ETHUSD_2025-06-22.csv\n2025-06-22 04:12:27,101 - INFO - Exported 3 combined records to combined_2025-06-22.csv\n2025-06-22 04:12:27,101 - INFO - ETL export completed successfully\n2025-06-22 04:12:27,101 - INFO - \u2705 Export successful: 6 CSV files created\n2025-06-22 04:12:27,104 - INFO -    \ud83d\udcc4 BTCUSD_2025-06-22.csv: 1 records\n2025-06-22 04:12:27,105 - INFO -    \ud83d\udcc4 combined_2025-06-22.csv: 3 records\n2025-06-22 04:12:27,106 - INFO -    \ud83d\udcc4 combined_2025-06-19.csv: 4 records\n2025-06-22 04:12:27,107 - INFO -    \ud83d\udcc4 BTCUSD_2025-06-19.csv: 1 records\n2025-06-22 04:12:27,108 - INFO -    \ud83d\udcc4 ETHUSD_2025-06-22.csv: 1 records\n2025-06-22 04:12:27,109 - INFO -    \ud83d\udcc4 ETHUSD_2025-06-19.csv: 1 records\n2025-06-22 04:12:27,109 - INFO - \n2025-06-22 04:12:27,109 - INFO - \ud83d\udd0d Test 5: Testing database queries...\n2025-06-22 04:12:27,109 - INFO - \u2705 Total records in database: 9\n2025-06-22 04:12:27,109 - INFO -    \ud83d\udcca BTCUSD: 3 records\n2025-06-22 04:12:27,109 - INFO -    \ud83d\udcca ETHUSD: 3 records\n2025-06-22 04:12:27,109 - WARNING - \u26a0\ufe0f  No recent data found (last hour)\n2025-06-22 04:12:27,109 - INFO - \n2025-06-22 04:12:27,109 - INFO - \ud83d\udd0d Test 6: Testing dashboard data availability...\n2025-06-22 04:12:27,110 - WARNING - \u26a0\ufe0f  BTCUSD: No data available for dashboard (last 24h)\n2025-06-22 04:12:27,110 - WARNING - \u26a0\ufe0f  ETHUSD: No data available for dashboard (last 24h)\n2025-06-22 04:12:27,110 - INFO - \n2025-06-22 04:12:27,110 - INFO - \ud83d\udccb TEST SUMMARY\n2025-06-22 04:12:27,110 - INFO - ============================================================\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - API Connection\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - Database Setup\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - Data Harvesting\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - Data Export\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - Database Queries\n2025-06-22 04:12:27,110 - INFO - \u2705 PASS - Dashboard Data\n2025-06-22 04:12:27,110 - INFO - \n2025-06-22 04:12:27,110 - INFO - \ud83c\udfaf Results: 6/6 tests passed\n2025-06-22 04:12:27,110 - INFO - \ud83c\udf89 All tests passed! Data collection pipeline is ready.\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_data_collection.py\", line 456, in <module>\n    main() \n  File \"/Users/zach/Documents/Git/TickerML/tests/test_data_collection.py\", line 440, in main\n    response = input(\"\\n\ud83d\udd04 Run continuous collection test? (y/N): \").strip().lower()\nEOFError: EOF when reading a line\n",
        "return_code": 1
      },
      "test_sentiment_no_fallback": {
        "status": "passed",
        "output": "Testing sentiment analysis without fallback...\nTest text: Bitcoin surges to new all-time high amid positive market sentiment\n\n\u2705 Sentiment analysis succeeded: 0.3\nThis means Ollama with Qwen 3 is available and working\n",
        "error": "2025-06-22 04:12:27,509 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n"
      },
      "test_sentiment": {
        "status": "passed",
        "output": "Testing Qwen 3 Sentiment Analysis\n==================================================\n\nTest Case 1:\nText: Bitcoin price surges to new all-time high as institutional adoption increases\nSentiment Score: 0.300\nSentiment Label: Positive\n\nTest Case 2:\nText: Cryptocurrency market crashes amid regulatory concerns and investor panic\nSentiment Score: 0.200\nSentiment Label: Positive\n\nTest Case 3:\nText: Ethereum network upgrade completed successfully with minimal disruption\nSentiment Score: 0.100\nSentiment Label: Neutral\n\nTest Case 4:\nText: Mixed signals in crypto market as some coins rise while others fall\nSentiment Score: 0.200\nSentiment Label: Positive\n\n==================================================\nTest completed!\n",
        "error": "2025-06-22 04:12:28,207 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:28,208 - INFO - Parsed sentiment score 0.3 from response: 0.3...\n2025-06-22 04:12:28,354 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:28,355 - INFO - Parsed sentiment score 0.2 from response: 0.2...\n2025-06-22 04:12:28,486 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:28,487 - INFO - Parsed sentiment score 0.1 from response: 0.1...\n2025-06-22 04:12:28,604 - INFO - HTTP Request: POST http://localhost:11434/api/chat \"HTTP/1.1 200 OK\"\n2025-06-22 04:12:28,605 - INFO - Parsed sentiment score 0.2 from response: 0.2...\n"
      },
      "test_summary": {
        "status": "passed",
        "output": "\ud83c\udfaf TickerML Data Collection Pipeline - Test Summary\n============================================================\n\u2705 Database: Created and accessible\n\n\ud83d\udcca Data Collection Status:\n   BTCUSD: 152 records\n   ETHUSD: 152 records\n   TESTUSD: 3 records\n   Total: 307 records\n\n\ud83d\udd50 Recent Data (last hour):\n   BTCUSD: 1 records, latest: 2025-06-22 08:12:00\n   ETHUSD: 1 records, latest: 2025-06-22 08:12:00\n\n\ud83d\udcc1 CSV Exports: 6 files created\n   BTCUSD_2025-06-22.csv: 0.2 KB\n   combined_2025-06-22.csv: 0.4 KB\n   combined_2025-06-19.csv: 0.5 KB\n   BTCUSD_2025-06-19.csv: 0.2 KB\n   ETHUSD_2025-06-22.csv: 0.2 KB\n   ETHUSD_2025-06-19.csv: 0.2 KB\n\n\ud83c\udf10 API Status:\n   Binance.com: \u274c Blocked (geographic restriction)\n   Binance.US: \u2705 Primary API\n   CoinGecko: \u2705 Fallback API\n\n\ud83d\udd27 Component Status:\n   Database Setup: \u2705\n   Data Harvesting: \u2705\n   Data Export: \u2705\n   API Connection: \u2705\n   Error Handling: \u2705\n   Duplicate Prevention: \u2705\n\n\u26a1 Performance:\n   API Response Time: < 1 second\n   Database Insert: < 50ms\n   Export Speed: < 1 second\n   Memory Usage: Minimal\n\n\ud83d\ude80 Next Steps:\n1. Set up automated collection:\n   crontab -e\n   * * * * * cd /Users/zach/Documents/Git/TickerML && python raspberry_pi/harvest.py\n\n2. Start dashboard (after collecting more data):\n   python raspberry_pi/dashboard.py\n\n3. Collect data for 24+ hours before training models\n\n4. Set up PC environment for feature engineering:\n   bash scripts/setup.sh\n\n\u2699\ufe0f  Configuration Notes:\n   - Primary: Binance.US API (https://api.binance.us/api/v3)\n   - Fallback: CoinGecko API (https://api.coingecko.com/api/v3)\n   - Symbols: BTCUSD, ETHUSD (USD pairs)\n   - Collection interval: Every minute\n   - Storage: SQLite database\n   - Export: Daily CSV files\n\n\ud83c\udf89 Data Collection Pipeline is Ready!\n   All core components are working correctly.\n   You can now start automated data collection.\n",
        "error": ""
      },
      "test_enhanced_trading": {
        "status": "failed",
        "output": "Running Enhanced Trading System Tests...\n\nEnhanced Trading Tests Complete:\n  Tests Run: 7\n  Failures: 1\n  Errors: 1\n  Success Rate: 71.4%\n",
        "error": "test_correlation_calculation (__main__.TestEnhancedTradingSystem)\nTest correlation matrix calculation ... INFO:raspberry_pi.risk_manager:Loaded price data: 50 periods, 2 symbols\nINFO:raspberry_pi.risk_manager:Updated correlation matrix: (2, 2)\nok\ntest_execution_simulator_with_order_book (__main__.TestEnhancedTradingSystem)\nTest execution simulator with order book data ... ERROR:raspberry_pi.execution_simulator:Error simulating order execution: unsupported operand type(s) for +=: 'float' and 'str'\nFAIL\ntest_integrated_trading_system (__main__.TestEnhancedTradingSystem)\nTest integrated trading system with all enhancements ... INFO:raspberry_pi.paper_trader:Paper trading database initialized successfully\nERROR:raspberry_pi.risk_manager:Error calculating portfolio heat: 'float' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error assessing concentration risk: 'float' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 50 periods, 1 symbols\nINFO:raspberry_pi.risk_manager:Updated correlation matrix: (1, 1)\nERROR:raspberry_pi.risk_manager:Error calculating correlation risk: 'float' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 1 symbols\nERROR:raspberry_pi.risk_manager:Error assessing portfolio risk: 'float' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating position risk adjustment: 'float' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating portfolio heat: 'float' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error assessing concentration risk: 'float' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating correlation risk: 'float' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 1 symbols\nERROR:raspberry_pi.risk_manager:Error assessing portfolio risk: 'float' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:=== Portfolio Risk Assessment ===\nINFO:raspberry_pi.risk_manager:Risk Level: LOW\nINFO:raspberry_pi.risk_manager:Volatility Regime: normal_volatility\nINFO:raspberry_pi.risk_manager:Total Exposure: 0.0%\nINFO:raspberry_pi.risk_manager:Portfolio Heat: 0.0%\nINFO:raspberry_pi.risk_manager:Correlation Risk: 0.000\nINFO:raspberry_pi.risk_manager:Concentration Risk: 0.0%\nINFO:raspberry_pi.risk_manager:Volatility Risk: 0.500\nINFO:raspberry_pi.risk_manager:Max Drawdown Risk: 0.0%\nERROR:raspberry_pi.execution_simulator:Error simulating order execution: unsupported operand type(s) for +=: 'float' and 'str'\nINFO:raspberry_pi.execution_simulator:Execution Metrics for BTCUSD_1750579949429:\nINFO:raspberry_pi.execution_simulator:  Filled: 0.000000\nINFO:raspberry_pi.execution_simulator:  Avg Price: $0.00\nINFO:raspberry_pi.execution_simulator:  Remaining: 0.010000\nINFO:raspberry_pi.execution_simulator:  Queue Position: 0\nINFO:raspberry_pi.execution_simulator:  Toxic Fill: False\nINFO:raspberry_pi.execution_simulator:  Latency: 0.0ms\nINFO:raspberry_pi.execution_simulator:  Partial Fills: 0\nWARNING:raspberry_pi.paper_trader:Order BTCUSD_1750579949429 rejected: no fills possible\nINFO:raspberry_pi.paper_trader:Placed market buy order: 0.01 BTCUSD\nok\ntest_position_risk_adjustment (__main__.TestEnhancedTradingSystem)\nTest position size adjustment based on correlation ... INFO:raspberry_pi.risk_manager:Loaded price data: 50 periods, 2 symbols\nINFO:raspberry_pi.risk_manager:Updated correlation matrix: (2, 2)\nERROR:raspberry_pi.risk_manager:Error calculating position risk adjustment: 'int' object has no attribute 'get'\nok\ntest_risk_assessment (__main__.TestEnhancedTradingSystem)\nTest comprehensive risk assessment ... ERROR:raspberry_pi.risk_manager:Error calculating portfolio heat: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error assessing concentration risk: 'int' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 50 periods, 2 symbols\nINFO:raspberry_pi.risk_manager:Updated correlation matrix: (2, 2)\nERROR:raspberry_pi.risk_manager:Error calculating correlation risk: 'int' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 2 symbols\nERROR:raspberry_pi.risk_manager:Error assessing portfolio risk: 'int' object has no attribute 'get'\nok\ntest_risk_manager_position_limits (__main__.TestEnhancedTradingSystem)\nTest risk manager position limits ... ERROR:raspberry_pi.risk_manager:Error calculating portfolio heat: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error assessing concentration risk: 'int' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 50 periods, 2 symbols\nINFO:raspberry_pi.risk_manager:Updated correlation matrix: (2, 2)\nERROR:raspberry_pi.risk_manager:Error calculating correlation risk: 'int' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 2 symbols\nERROR:raspberry_pi.risk_manager:Error assessing portfolio risk: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating position risk adjustment: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating portfolio heat: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error assessing concentration risk: 'int' object has no attribute 'get'\nERROR:raspberry_pi.risk_manager:Error calculating correlation risk: 'int' object has no attribute 'get'\nINFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 2 symbols\nERROR:raspberry_pi.risk_manager:Error assessing portfolio risk: 'int' object has no attribute 'get'\nok\ntest_volatility_regime_detection (__main__.TestEnhancedTradingSystem)\nTest volatility regime detection ... INFO:raspberry_pi.risk_manager:Loaded price data: 24 periods, 2 symbols\nERROR\n\n======================================================================\nERROR: test_volatility_regime_detection (__main__.TestEnhancedTradingSystem)\nTest volatility regime detection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_enhanced_trading.py\", line 233, in test_volatility_regime_detection\n    self.assertIsInstance(regime, self.risk_manager.VolatilityRegime)\nAttributeError: 'AdvancedRiskManager' object has no attribute 'VolatilityRegime'\n\n======================================================================\nFAIL: test_execution_simulator_with_order_book (__main__.TestEnhancedTradingSystem)\nTest execution simulator with order book data\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_enhanced_trading.py\", line 174, in test_execution_simulator_with_order_book\n    self.assertGreater(result.filled_quantity, 0, \"Should fill some quantity\")\nAssertionError: 0.0 not greater than 0 : Should fill some quantity\n\n----------------------------------------------------------------------\nRan 7 tests in 0.035s\n\nFAILED (failures=1, errors=1)\n",
        "return_code": 1
      },
      "test_decision_transformer": {
        "status": "failed",
        "output": "",
        "error": "Traceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_decision_transformer.py\", line 18, in <module>\n    from pc.models.decision_transformer import (\n  File \"/Users/zach/Documents/Git/TickerML/pc/models/__init__.py\", line 7, in <module>\n    from .decision_transformer import (\nImportError: cannot import name 'FlashMultiheadAttention' from 'pc.models.decision_transformer' (/Users/zach/Documents/Git/TickerML/pc/models/decision_transformer.py)\n",
        "return_code": 1
      },
      "test_arbitrage": {
        "status": "failed",
        "output": "Running arbitrage tests...\n\n\u274c Some arbitrage tests failed!\n",
        "error": "test_opportunity_creation (__main__.TestArbitrageOpportunity)\nTest creating arbitrage opportunity ... ERROR\ntest_opportunity_profitability (__main__.TestArbitrageOpportunity)\nTest profitability calculation ... ERROR\ntest_add_exchange (__main__.TestArbitrageMonitor)\nTest adding exchange to monitor ... ERROR\ntest_add_symbol (__main__.TestArbitrageMonitor)\nTest adding symbol to monitor ... ERROR\ntest_arbitrage_detection (__main__.TestArbitrageMonitor)\nTest arbitrage opportunity detection ... ERROR\ntest_fee_calculation (__main__.TestArbitrageMonitor)\nTest fee calculation in arbitrage detection ... ERROR\ntest_get_best_opportunity (__main__.TestArbitrageMonitor)\nTest getting best opportunity ... ERROR\ntest_get_recent_opportunities (__main__.TestArbitrageMonitor)\nTest getting recent opportunities ... ERROR\ntest_latency_adjustment (__main__.TestArbitrageMonitor)\nTest latency adjustment in profit calculation ... ERROR\ntest_monitor_initialization (__main__.TestArbitrageMonitor)\nTest monitor initialization ... ERROR\ntest_opportunity_logging (__main__.TestArbitrageMonitor)\nTest opportunity logging to database ... ERROR\ntest_end_to_end_monitoring (__main__.TestArbitrageIntegration)\nTest end-to-end arbitrage monitoring workflow ... ERROR\n\n======================================================================\nERROR: test_opportunity_creation (__main__.TestArbitrageOpportunity)\nTest creating arbitrage opportunity\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 94, in test_opportunity_creation\n    opportunity = ArbitrageOpportunity(\nNameError: name 'ArbitrageOpportunity' is not defined\n\n======================================================================\nERROR: test_opportunity_profitability (__main__.TestArbitrageOpportunity)\nTest profitability calculation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 118, in test_opportunity_profitability\n    profitable = ArbitrageOpportunity(\nNameError: name 'ArbitrageOpportunity' is not defined\n\n======================================================================\nERROR: test_add_exchange (__main__.TestArbitrageMonitor)\nTest adding exchange to monitor\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_add_symbol (__main__.TestArbitrageMonitor)\nTest adding symbol to monitor\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_arbitrage_detection (__main__.TestArbitrageMonitor)\nTest arbitrage opportunity detection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_fee_calculation (__main__.TestArbitrageMonitor)\nTest fee calculation in arbitrage detection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_get_best_opportunity (__main__.TestArbitrageMonitor)\nTest getting best opportunity\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_get_recent_opportunities (__main__.TestArbitrageMonitor)\nTest getting recent opportunities\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_latency_adjustment (__main__.TestArbitrageMonitor)\nTest latency adjustment in profit calculation\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_monitor_initialization (__main__.TestArbitrageMonitor)\nTest monitor initialization\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_opportunity_logging (__main__.TestArbitrageMonitor)\nTest opportunity logging to database\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 162, in setUp\n    self.monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n======================================================================\nERROR: test_end_to_end_monitoring (__main__.TestArbitrageIntegration)\nTest end-to-end arbitrage monitoring workflow\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 603, in test_end_to_end_monitoring\n    asyncio.run(run_test())\n  File \"/Users/zach/miniconda3/lib/python3.10/asyncio/runners.py\", line 44, in run\n    return loop.run_until_complete(main)\n  File \"/Users/zach/miniconda3/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\n    return future.result()\n  File \"/Users/zach/Documents/Git/TickerML/tests/test_arbitrage.py\", line 527, in run_test\n    monitor = ArbitrageMonitor()\nNameError: name 'ArbitrageMonitor' is not defined\n\n----------------------------------------------------------------------\nRan 12 tests in 0.004s\n\nFAILED (errors=12)\n",
        "return_code": 1
      },
      "test_arbitrage_simple": {
        "status": "passed",
        "output": "Running simplified arbitrage tests...\n\n\u2705 All arbitrage tests passed!\n",
        "error": "test_latency_adjustment (__main__.TestArbitrageCalculations)\nTest latency risk adjustment ... ok\ntest_profit_after_fees (__main__.TestArbitrageCalculations)\nTest profit calculation after fees ... ok\ntest_profit_estimation (__main__.TestArbitrageCalculations)\nTest estimated profit calculation ... ok\ntest_profitability_threshold (__main__.TestArbitrageCalculations)\nTest profitability threshold checking ... ok\ntest_quantity_calculation (__main__.TestArbitrageCalculations)\nTest maximum quantity calculation ... ok\ntest_spread_calculation (__main__.TestArbitrageCalculations)\nTest spread percentage calculation ... ok\ntest_best_price_extraction (__main__.TestOrderBookAnalysis)\nTest extracting best bid/ask prices ... ok\ntest_depth_analysis (__main__.TestOrderBookAnalysis)\nTest analyzing orderbook depth ... ok\ntest_spread_calculation_from_orderbook (__main__.TestOrderBookAnalysis)\nTest spread calculation from orderbook ... ok\ntest_opportunity_logging (__main__.TestDatabaseOperations)\nTest logging arbitrage opportunity ... ok\ntest_opportunity_querying (__main__.TestDatabaseOperations)\nTest querying arbitrage opportunities ... ok\n\n----------------------------------------------------------------------\nRan 11 tests in 0.003s\n\nOK\n"
      },
      "test_pipeline": {
        "status": "passed",
        "output": "",
        "error": "2025-06-22 04:12:30,779 - INFO - \ud83e\uddea Starting pipeline tests...\n2025-06-22 04:12:30,779 - INFO - \n--- Running File Structure Test ---\n2025-06-22 04:12:30,779 - INFO - Testing file structure...\n2025-06-22 04:12:30,779 - INFO - \u2713 All required files present\n2025-06-22 04:12:30,779 - INFO - \n--- Running Imports Test ---\n2025-06-22 04:12:30,779 - INFO - Testing imports...\n2025-06-22 04:12:30,817 - INFO - \u2713 Basic packages imported successfully\n2025-06-22 04:12:31,235 - INFO - \u2139 ML packages not available (Raspberry Pi mode)\n2025-06-22 04:12:31,279 - INFO - \u2713 Flask imported successfully\n2025-06-22 04:12:31,279 - INFO - \n--- Running Database Test ---\n2025-06-22 04:12:31,279 - INFO - Testing database operations...\n2025-06-22 04:12:31,284 - WARNING - database.ohlcv_path not found in config. Using default.\n2025-06-22 04:12:31,284 - INFO - Loaded data.binance_api_base from config: https://api.binance.us/api/v3\n2025-06-22 04:12:31,284 - INFO - Loaded data.symbols from config: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:31,284 - INFO - Enhanced database schema initialized for high-frequency data collection\n2025-06-22 04:12:31,284 - INFO - Database initialized at /Users/zach/Documents/Git/TickerML/data/db/crypto_ohlcv.db\n2025-06-22 04:12:31,285 - INFO - Stored data for TESTUSDT at 2025-06-22 04:12:31.284000\n2025-06-22 04:12:31,285 - INFO - \u2713 Database operations successful\n2025-06-22 04:12:31,285 - INFO - \n--- Running API Connection Test ---\n2025-06-22 04:12:31,285 - INFO - Testing API connection...\n2025-06-22 04:12:31,289 - INFO - Loaded API base from config: https://api.binance.us/api/v3\n2025-06-22 04:12:31,391 - INFO - \u2713 API connection to https://api.binance.us/api/v3/ping successful\n2025-06-22 04:12:31,391 - INFO - \n--- Running Feature Engineering Test ---\n2025-06-22 04:12:31,391 - INFO - Testing feature engineering...\n2025-06-22 04:12:31,551 - ERROR - Error computing technical indicators: module 'ta.volume' has no attribute 'volume_sma'\n2025-06-22 04:12:31,551 - INFO - \u2713 Feature engineering successful\n2025-06-22 04:12:31,551 - INFO - \n--- Running Model Architecture Test ---\n2025-06-22 04:12:31,551 - INFO - Testing model architecture...\n2025-06-22 04:12:32,264 - INFO - \u2713 Model architecture test successful\n2025-06-22 04:12:32,266 - INFO - \n--- Running Dashboard Test ---\n2025-06-22 04:12:32,266 - INFO - Testing dashboard components...\n2025-06-22 04:12:32,273 - WARNING - db_path not found in config or its parent key is missing. Using default: /Users/zach/Documents/Git/TickerML/data/db/crypto_ohlcv.db\n2025-06-22 04:12:32,273 - INFO - Loaded symbols from config: ['BTCUSD', 'ETHUSD']\n2025-06-22 04:12:32,273 - INFO - Loaded host from config: 0.0.0.0\n2025-06-22 04:12:32,273 - INFO - Loaded port from config: 5005\n2025-06-22 04:12:32,273 - INFO - Loaded debug from config: False\n2025-06-22 04:12:32,279 - INFO - \u2713 Dashboard test successful\n2025-06-22 04:12:32,279 - INFO - \n==================================================\n2025-06-22 04:12:32,279 - INFO - TEST SUMMARY\n2025-06-22 04:12:32,279 - INFO - ==================================================\n2025-06-22 04:12:32,279 - INFO - File Structure       \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - Imports              \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - Database             \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - API Connection       \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - Feature Engineering  \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - Model Architecture   \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - Dashboard            \u2713 PASS\n2025-06-22 04:12:32,279 - INFO - \nPassed: 7/7\n2025-06-22 04:12:32,279 - INFO - \ud83c\udf89 All tests passed! Pipeline is ready.\n"
      },
      "test_system_health": {
        "status": "timeout",
        "error": "Test timed out after 60 seconds"
      }
    }
  },
  "components": {
    "exchange_binance": true,
    "exchange_coinbase": true,
    "exchange_kraken": true,
    "exchange_kucoin": true,
    "kafka_producers_count": 3,
    "kafka_consumers_count": 2,
    "model_files_count": 2,
    "decision_transformer_exists": true,
    "paper_trader_exists": true,
    "risk_manager_exists": true,
    "arbitrage_monitor_exists": true
  },
  "dependencies": {
    "python_version": "3.10.12 | packaged by conda-forge | (main, Jun 23 2023, 22:41:52) [Clang 15.0.7 ]",
    "torch_available": true,
    "torch_version": "2.4.0",
    "cuda_available": false,
    "kafka_running": false,
    "sqlite_available": true,
    "database_exists": true,
    "websocket-client_available": false,
    "pyyaml_available": false
  },
  "performance": {
    "cpu_count": 12,
    "cpu_percent": 64.6,
    "memory_total_gb": 18.0,
    "memory_available_gb": 5.0268096923828125,
    "memory_percent": 72.1,
    "gpu_available": false,
    "database_size_mb": 0.1015625,
    "ohlcv_records": 9,
    "recent_ohlcv_records": 9,
    "model_inference_error": "cannot import name 'FlashMultiheadAttention' from 'pc.models.decision_transformer' (/Users/zach/Documents/Git/TickerML/pc/models/decision_transformer.py)"
  },
  "overall_status": "fair",
  "health_score": 0.66
}